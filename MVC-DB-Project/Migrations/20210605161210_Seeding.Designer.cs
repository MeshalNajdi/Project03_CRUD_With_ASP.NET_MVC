// <auto-generated />
using MVC_DB_Project.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVC_DB_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210605161210_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MVC_DB_Project.Models.CoacheModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("experience")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("nationality")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("Coaches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LeagueId = 1,
                            TeamId = 1,
                            experience = 15,
                            name = "Coache Meshal1",
                            nationality = "KSA"
                        },
                        new
                        {
                            Id = 2,
                            LeagueId = 2,
                            TeamId = 2,
                            experience = 4,
                            name = "Coache Meshal2",
                            nationality = "ARG"
                        },
                        new
                        {
                            Id = 3,
                            LeagueId = 3,
                            TeamId = 3,
                            experience = 10,
                            name = "Coache Meshal3",
                            nationality = "USA"
                        });
                });

            modelBuilder.Entity("MVC_DB_Project.Models.LeagueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("country")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int>("numberOfTeams")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("leagues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            country = "Saudi Arabia",
                            name = "League Meshal1",
                            numberOfTeams = 16
                        },
                        new
                        {
                            Id = 2,
                            country = "France",
                            name = "League Meshal2",
                            numberOfTeams = 30
                        },
                        new
                        {
                            Id = 3,
                            country = "Spain",
                            name = "League Meshal3",
                            numberOfTeams = 38
                        });
                });

            modelBuilder.Entity("MVC_DB_Project.Models.PlayerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CoacheId")
                        .HasColumnType("int");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoacheId");

                    b.HasIndex("LeagueId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoacheId = 1,
                            LeagueId = 1,
                            TeamId = 1,
                            name = "Meshal",
                            number = 10
                        },
                        new
                        {
                            Id = 2,
                            CoacheId = 2,
                            LeagueId = 2,
                            TeamId = 2,
                            name = "Meshal2",
                            number = 7
                        },
                        new
                        {
                            Id = 3,
                            CoacheId = 3,
                            LeagueId = 3,
                            TeamId = 3,
                            name = "Meshal3",
                            number = 15
                        });
                });

            modelBuilder.Entity("MVC_DB_Project.Models.TeamModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int>("numberOfPlayers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LeagueId = 1,
                            city = "Jeddah",
                            name = "Team Meshal1",
                            numberOfPlayers = 28
                        },
                        new
                        {
                            Id = 2,
                            LeagueId = 2,
                            city = "Paris",
                            name = "Team Meshal2",
                            numberOfPlayers = 30
                        },
                        new
                        {
                            Id = 3,
                            LeagueId = 3,
                            city = "Madrid",
                            name = "Team Meshal3",
                            numberOfPlayers = 25
                        });
                });

            modelBuilder.Entity("MVC_DB_Project.Models.CoacheModel", b =>
                {
                    b.HasOne("MVC_DB_Project.Models.LeagueModel", "League")
                        .WithMany("Coaches")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_DB_Project.Models.TeamModel", "Team")
                        .WithOne("Coache")
                        .HasForeignKey("MVC_DB_Project.Models.CoacheModel", "TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DB_Project.Models.PlayerModel", b =>
                {
                    b.HasOne("MVC_DB_Project.Models.CoacheModel", "Coache")
                        .WithMany("players")
                        .HasForeignKey("CoacheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_DB_Project.Models.LeagueModel", "League")
                        .WithMany("players")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_DB_Project.Models.TeamModel", "Team")
                        .WithMany("players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVC_DB_Project.Models.TeamModel", b =>
                {
                    b.HasOne("MVC_DB_Project.Models.LeagueModel", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
